<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
    <TriggerPackage/>
    <TimerPackage/>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>sys</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>install</name>
                <script>TReX.config.install()</script>
                <command></command>
                <packageName></packageName>
                <regex>^install$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>login (cmd)</name>
                <script>raiseEvent(&quot;login load&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tlogin$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>load (cmd)</name>
                <script>TReX.config.loadSettings()
</script>
                <command></command>
                <packageName></packageName>
                <regex>^tload$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>save (cmd)</name>
                <script>TReX.config.saveSettings()
</script>
                <command></command>
                <packageName></packageName>
                <regex>^tsave$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>affs reset (cmd)</name>
                <script>t.serverside.gmcp_aff_table = {}
t.serverside.gmcpAffShow()
TReX.prios.reset()
for k,v in pairs(t.affs) do
	t.affs[k] = false
end

t.serverside.retardmode = false


		t.def  = {}
		t.defs = {}
		
		TReX.defs.reset()
		TReX.defs.login() 
		TReX.class.skill_check()</script>
                <command></command>
                <packageName></packageName>
                <regex>^treset$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>pause (cmd)</name>
                <script>TReX.config.pause()</script>
                <command></command>
                <packageName></packageName>
                <regex>^pp$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>sleep (cmd)</name>
                <script>t.send(&quot;queue prepend eqbal relax insomnia &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;sleep&quot;, false)</script>
                <command></command>
                <packageName></packageName>
                <regex>^sleep$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>class switch (class)</name>
                <script>if matches[2] then 
	TReX.s.class_switch(matches[2])
else
	TReX.s.class_check()
	t.serverside.green_echo(&quot;You are currently: &quot;..TReX.s.class)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^cc(?: (.+))?</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>sit alias</name>
                <script>TReX.serverside.sit(matches[2])
</script>
                <command></command>
                <packageName></packageName>
                <regex>^sit(?: (\w+))?</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>affbar</name>
                <script>local toggle = &quot;on&quot;
if matches[2] == nil and t.serverside.settings.affbar then
	toggle = &quot;off&quot;
end
if matches[2] == &quot;off&quot; then
	toggle = &quot;off&quot;
end

TReX.serverside.affbar(toggle)</script>
                <command></command>
                <packageName></packageName>
                <regex>^affbar\s?(on|off)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>trex</name>
                <script>TReX.config.show()
</script>
                <command></command>
                <packageName></packageName>
                <regex>^trex$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>setup</name>
                <script>TReX.config.show(&quot;setup&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^setup$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>development</name>
                <script>TReX.config.show(&quot;development&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^development$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>API</name>
                <script>TReX.config.show(&quot;api&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^api$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>report a bug</name>
                <script>TReX.config.show(&quot;bugs&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^bugs$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>help file</name>
                <script>TReX.config.show(&quot;help file&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^help file$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>clan information</name>
                <script>TReX.config.show(&quot;clan info&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^clan info$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>about</name>
                <script>TReX.config.show(&quot;about&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^about$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>inventory</name>
                <script>TReX.inv.set_id_table()
cecho(&quot;\n\t&lt;white&gt;Inventory\n&quot;)
	for k,v in pairs(t.inv) do
		cecho(&quot;\n\t&lt;dim_gray&gt;&quot;..v.name..&quot;&lt;white&gt;: &quot;..v.id..&quot;&quot;, false)
	end

		echo&quot;\n\n&quot;
		deletep=false
			if not table.contains({prompt_sent}, &quot;sent&quot;) then
				table.insert(prompt_sent, &quot;sent&quot;)
			end
		TReX.stats.custom_prompt()</script>
                <command></command>
                <packageName></packageName>
                <regex>^inventory$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>prios</name>
                <script>TReX.config.show(&quot;prios&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^prios$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>tree</name>
                <script>TReX.config.show(&quot;tree&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tree$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>lust</name>
                <script>TReX.config.show(&quot;lust&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^lust$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>prompt</name>
                <script>TReX.config.show(&quot;prompt&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^prompt$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>settings</name>
                <script>TReX.config.show(&quot;settings&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^settings$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>projects</name>
                <script>TReX.config.show(&quot;projects&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^todo$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>health / mana swap</name>
                <script>if t.serverside.settings_default.sip ~= &quot;Health&quot; then
	t.serverside[&quot;settings_default&quot;].sip = tostring(&quot;Health&quot;)
	t.send(&quot;curing priority health&quot;, false)
else
	t.serverside[&quot;settings_default&quot;].sip = tostring(&quot;Mana&quot;)
	t.send(&quot;curing priority mana&quot;, false)	
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^hh$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>utility</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>mount</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>mount list</name>
                    <script>TReX.config.show(&quot;mount list&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mount list$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>vault (cmd)</name>
                    <script>-- make sure you 'inventory' list is showing your mount or this wont work
-- its pretty much copy and paste to add your items in the inventory scripts, i give plenty of examples



if TReX.s.class == &quot;Dragon&quot; then t.serverside.red_echo(&quot;You're in Dragonform.. Can't mount idiot!&quot;) return end

t.serverside[&quot;settings&quot;].override=false

if matches[2]==&quot;urn&quot; then
	send(&quot;cq all##queue prepend eqbal rub urn&quot;)
end

  if mount_list then
    for k,v in pairs(mount_list) do
      if v.enabled then
  			 t.send(&quot;curing usevault on&quot;, false)
				 t.serverside.settings.vault = true
				 t.send(&quot;drop &quot;..mount_list[k].number)
  			 t.send(&quot;curing mount &quot;..mount_list[k].number)
				 t.serverside[&quot;settings_default&quot;].mount = mount_list[k].number
			end
  		--create a mounted check to prevent this later
  		--if table.contains({t.inv}, tonumber(v.number)) then -- if in my inventory
  			
  		--end
  	 end
  else
  	TReX.config.display(&quot;No system mount set&quot;)
  end
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(va|vault|urn)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>dismount (cmd)</name>
                    <script>-- make sure you 'inventory' list is showing your mount or this wont work
-- its pretty much copy and paste to add your items in the inventory scripts, i give plenty of examples

for k,v in pairs(mount_list) do
	if v.enabled then
		t.serverside.settings.vault = false
		t.send(&quot;curing mount 0&quot;)
		t.send(&quot;curing usevault off&quot;, false)
		t.send(&quot;cq all##queue prepend eqbal dismount##order &quot;..mount_list[k].number..&quot; follow me&quot;, false)
	end
end
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(dis|dismount)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mount remove (cmd)</name>
                    <script>--mount remove (name)
mount_list = mount_list or {}
TReX.config.remove_mount(matches[2])

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mount remove (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mount add (cmd)</name>
                    <script>-- mount add (name) (number)
mount_list = mount_list or {}
TReX.config.add_mount(matches[2], matches[3])

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mount add (\w+) (\d+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mount reset (cmd)</name>
                    <script>-- make sure you 'inventory' list is showing your mount or this wont work
-- its pretty much copy and paste to add your items in the inventory scripts, i give plenty of examples

for k,v in pairs(mount_list) do
	if v.enabled then
		TReX.config.mount_list_toggle(k)
	end
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mount reset$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mount jump &lt;dir&gt;</name>
                    <script>-- make sure you 'inventory' list is showing your mount or this wont work
-- its pretty much copy and paste to add your items in the inventory scripts, i give plenty of examples

t.send(&quot;clearqueue eqbal &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;queue add eqbal stand &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;vault &quot;..t.serverside[&quot;settings_default&quot;].mount..(TReX.config.cc or &quot;##&quot;)..&quot;open door &quot;..matches[2]..(TReX.config.cc or &quot;##&quot;)..&quot;mountjump &quot; ..matches[2], false)

	if table.index_of({&quot;Sentinel&quot;}, TReX.s.class) then
		t.send(&quot;queue add eqbal call animals&quot;, false)
	end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mj (\w+)$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>lust</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>lust whitelist add</name>
                    <script>TReX.lust.whitelist(matches[2], true)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^lust add (\w+)</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>lust whitelist remove</name>
                    <script>TReX.lust.whitelist(matches[2], true, true)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^lust remove (\w+)$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>precache</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>precache (manual)</name>
                    <script>TReX.precache.out()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pc$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>precache</name>
                    <script>TReX.config.show(&quot;precache&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^precache$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>in rift</name>
                    <script>t.send(&quot;inr all&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^inra$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>playList</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>playlist toggle</name>
                    <script>local toggle = &quot;on&quot;
if matches[2] == nil and playList.on then
	toggle = &quot;off&quot;
end
if matches[2] == &quot;off&quot; then
	toggle = &quot;off&quot;
end

playList.toggle(toggle)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^playlist\s?(on|off)?$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>pipes</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>pipe refill</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>refill pipe</name>
                        <script>TReX.pipes.refill(matches[2])</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^refillpipe (\w+)$</regex>
                    </Alias>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>sip values (menu)</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>set health at</name>
                            <script>TReX.config.sip_health_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^sip_health_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>sip mana at</name>
                            <script>TReX.config.sip_mana_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^sip_mana_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>moss health at</name>
                            <script>TReX.config.moss_health_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^moss_health_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>moss mana at</name>
                            <script>TReX.config.moss_mana_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^moss_mana_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>refill pipes at</name>
                            <script>TReX.config.refill_pipes_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^refill_pipes_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>unknown diagnose</name>
                            <script>TReX.config.unknown_diagnose_at(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^unknown_diag_at (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>set_fractures</name>
                            <script>TReX.config.set_fractures(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^set_fractures (\d+)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>set_mount</name>
                            <script>TReX.config.set_mount(matches[2])</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^set_mount (\d+)$</regex>
                        </Alias>
                    </AliasGroup>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>prompt (menu)</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>health</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>health numbers &amp; percent</name>
                                <script>if t.stats.prompt ~= &quot;both&quot; then
t.stats.prompt = &quot;both&quot;
else
t.stats.prompt = false
end

TReX.stats.p_n_health_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^thnp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Health prompt</name>
                                <script>TReX.stats.health_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^thp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>health prompt percent</name>
                                <script>TReX.stats.p_health_on_prompt()
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^thpp$</regex>
                            </Alias>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Mana</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>Mana numbers &amp; percent</name>
                                <script>if t.stats.prompt ~= &quot;both&quot; then
t.stats.prompt = &quot;both&quot;
else
t.stats.prompt = false
end

TReX.stats.p_n_mana_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tmnp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Mana prompt</name>
                                <script>TReX.stats.mana_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tmp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Mana prompt percent</name>
                                <script>TReX.stats.p_mana_on_prompt()
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tmpp$</regex>
                            </Alias>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Endurance</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>Endurance numbers &amp; percent</name>
                                <script>if t.stats.prompt ~= &quot;both&quot; then
t.stats.prompt = &quot;both&quot;
else
t.stats.prompt = false
end

TReX.stats.p_n_endurance_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tenp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Endurance prompt</name>
                                <script>TReX.stats.endurance_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tep$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Endurance prompt percent</name>
                                <script>TReX.stats.p_endurance_on_prompt()
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tepp$</regex>
                            </Alias>
                        </AliasGroup>
                        <AliasGroup isActive="yes" isFolder="yes">
                            <name>Willpower</name>
                            <script></script>
                            <command></command>
                            <packageName></packageName>
                            <regex></regex>
                            <Alias isActive="yes" isFolder="no">
                                <name>Willpower numbers &amp; percent</name>
                                <script>if t.stats.prompt ~= &quot;both&quot; then
t.stats.prompt = &quot;both&quot;
else
t.stats.prompt = false
end

TReX.stats.p_n_willpower_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^tewp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Willpower prompt</name>
                                <script>TReX.stats.willpower_on_prompt()</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^twp$</regex>
                            </Alias>
                            <Alias isActive="yes" isFolder="no">
                                <name>Willpower prompt percent</name>
                                <script>TReX.stats.p_willpower_on_prompt()
</script>
                                <command></command>
                                <packageName></packageName>
                                <regex>^twpp$</regex>
                            </Alias>
                        </AliasGroup>
                        <Alias isActive="yes" isFolder="no">
                            <name>Eq/Bal prompt</name>
                            <script>TReX.stats.eq_bal_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tebp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Defs prompt</name>
                            <script>TReX.stats.defs_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tdp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Timestamp prompt</name>
                            <script>TReX.stats.time_stamp_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tsp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Mono prompt</name>
                            <script>TReX.stats.mono_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tmop$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Target prompt</name>
                            <script>TReX.stats.target_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^trp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Level prompt</name>
                            <script>TReX.stats.level_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tlp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>karma prompt</name>
                            <script>TReX.stats.karma_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tkp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Denizenhealth prompt</name>
                            <script>TReX.stats.denizen_health_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tdhp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Prone prompt</name>
                            <script>TReX.stats.prone_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tpp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Healthdiff prompt</name>
                            <script>TReX.stats.diff_health_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^thdp</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Manadiff prompt</name>
                            <script>TReX.stats.diff_mana_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tmdp$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Limbdisplay prompt</name>
                            <script>TReX.stats.limb_display_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tldp</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>Sunight prompt</name>
                            <script>TReX.stats.sunlight_on_prompt()</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^tsp$</regex>
                        </Alias>
                    </AliasGroup>
                </AliasGroup>
                <Alias isActive="yes" isFolder="no">
                    <name>empty pipes (cmd)</name>
                    <script>TReX.pipes.epipes()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^empty pipes$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>clotting</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>clot at</name>
                    <script>TReX.config.set_clot_at(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^clot_at (\w+)$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>neat stuff</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>open url (list)</name>
                    <script>if matches[2] == &quot;google&quot; then
local url = &quot;http://www.google.com/&quot;
openUrl(url)
elseif matches[2] == &quot;achaea&quot; then
local url = &quot;http://www.achaea.com/&quot;
openUrl(url)
elseif matches[2] == &quot;gmail&quot; then
local url = &quot;http://www.gmail.com/&quot;
openUrl(url)
elseif matches[2] == &quot;regex&quot; then
local url = &quot;http://regexpal.com/&quot;
openUrl(url)
elseif matches[2] == &quot;wiki&quot; then
local url = &quot;http://wiki.mudlet.org/&quot;
openUrl(url)
elseif matches[2] == &quot;pastebin&quot; then
local url = &quot;http://pastebin.com/&quot;
openUrl(url)
elseif matches[2] == &quot;weebly&quot; then
local url = &quot;http://mudletscriptinghelp.weebly.com/&quot;
openUrl(url)
elseif matches[2] == &quot;ada&quot; then
local url = &quot;https://ada-young.appspot.com/pastebin/&quot;
openUrl(url)
elseif matches[2] == &quot;piratepad&quot; then
local url = &quot;http://piratepad.be/&quot;
openUrl(url)
elseif matches[2] == &quot;youtube&quot; then
local url = &quot;http://www.youtube.com/&quot;
openUrl(url)
elseif matches[2] == &quot;imgur&quot; then
local url = &quot;http://www.imgur.com/&quot;
openUrl(url)
elseif matches[2] == &quot;mudlet&quot; then
local url = &quot;http://www.mudlet.org/&quot;
openUrl(url)
elseif matches[2] == &quot;TReX&quot; then
local url = &quot;https://gitlab.com/Nehmrah/TReX.git/&quot;
openUrl(url)
elseif matches[2] == &quot;gmcp&quot; then
local url = &quot;http://www.ironrealms.com/gmcp-doc &quot;
openUrl(url)
elseif matches[2] == &quot;gmcpgit&quot; then
local url = &quot;https://github.com/keneanung/GMCPAdditions#room&quot;
openUrl(url)
end



</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(TReX|google|mudlet|achaea|gmail|regex|wiki|pastebin|weebly|ada|piratepad|youtube|imgur|gmcp|gmcpgit)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name># repeat times</name>
                    <script>for i = 1, tonumber(matches[2]) do
	expandAlias(matches[3])
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^#(\d+) (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>math (cmd)</name>
                    <script>display(assert(loadstring(&quot;return &quot;..matches[2]))())</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^math (.+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>echo to test (cmd)</name>
                    <script>local s = matches[2]

s = string.gsub(s, &quot;%$&quot;, &quot;\n&quot;)
feedTriggers(&quot;\n&quot; .. s .. &quot;\n&quot;)
echo(&quot;\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^echo (.+)</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>run lua code (cmd)</name>
                    <script>-- accepts 'tlua arg' or '? arg' or '?arg'
TReX.u.runLuaCode(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(?:tlua |\?\s?)(.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>reload / refresh lua data (cmd)</name>
                    <script>TReX.load()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(treload|trefresh)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>delete old profiles</name>
                    <script>deleteOldProfiles(matches[3], matches[2]==&quot;maps&quot;)

--Syntax examples: &quot;delete old profiles&quot;  -&gt; deletes profiles older than 31 days
--					&quot;delete old maps 10&quot;	-&gt; deletes maps older than 10 days</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>delete folder messages full</name>
                    <script>--NOTE:  			I suggest renumbering your messages first. with MSG RENUMBER. then running this alias
--i.e  dm 101     &lt;&lt; 	this will delete messages 1-101 fully, in all folders then renumber your messages. 
--							Seeing as how delmsg full only deletes messages in your main folder not any others you may have created for your self.

local i = 1
while( i &lt; matches[2]+1 ) -- plus one because we are telling the system to run 102 two times, so the 101'st will be deleted.
do

	send(&quot;dm &quot;..i) 
		
		i=i+1

end
send(&quot;msg renumber&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^dm (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>odyssean tongue</name>
                    <script>t.send(&quot;whispertongue &quot; ..matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wt (.+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>show colours</name>
                    <script>showColours(tonumber(matches[2]))

--Simply edit the script to add your colour, along the lines of: myColour = {193, 109, 56},</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^colours (\d+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>colours</name>
                    <script>showColors()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^colouring$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>inks</name>
                    <script>TReX.u.getInks(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^inks (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>daydream</name>
                    <script>if t.serverside.daydreaming then
	t.serverside.daydreaming = false
	t.serverside.green_echo(&quot;daydream off&quot;)
else
	t.serverside.daydreaming = true
	send(&quot;daydream&quot;)
	t.serverside.green_echo(&quot;daydream on&quot;)
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^daydream$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>buy inks</name>
                    <script>TReX.u.buyInks(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^buyinks (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>kneel</name>
                    <script>t.serverside.kneel(matches[2])</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^kneel(?: (\w+))?</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>class change</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>dragonform</name>
                    <script>t.send(&quot;queue add eqbal stand##dragonform&quot;)
TReX.config.ppause(&quot;on&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^dragonform$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>defence</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>keepup (toggle)</name>
                <script>if not matches[2] then
	TReX.config.show(&quot;keepup&quot;)
else
	TReX.defs._toggle_keepups(tostring(matches[2]))
end
</script>
                <command></command>
                <packageName></packageName>
                <regex>^keepup ?(\w+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>defup (toggle)</name>
                <script>if not matches[2] then
	TReX.config.show(&quot;defup&quot;)
else
	TReX.defs._toggle_defups(tostring(matches[2]))
end
</script>
                <command></command>
                <packageName></packageName>
                <regex>^defup ?(\w+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>defence (on/off)</name>
                <script>if t.affs.prone then
	t.send(&quot;queue prepend eqbal stand&quot;, false)
end

TReX.defs.defence()</script>
                <command></command>
                <packageName></packageName>
                <regex>^dd$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>defs (show list)</name>
                <script>TReX.defs.display()</script>
                <command></command>
                <packageName></packageName>
                <regex>^defs$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>def (serverside)</name>
                <script>send(&quot;queue prepend eqbal def&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^def$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>mass (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;mass&quot;))
TReX.defs.keepup()</script>
                <command></command>
                <packageName></packageName>
                <regex>^mass$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>levitate (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;levitating&quot;))
TReX.defs.keepup()</script>
                <command></command>
                <packageName></packageName>
                <regex>^levitate$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>metawake (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;metawake&quot;))</script>
                <command></command>
                <packageName></packageName>
                <regex>^metawake$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>rings (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;electricresist&quot;))
TReX.defs.def_keepup_toggle(tostring(&quot;magicresist&quot;))
TReX.defs.def_keepup_toggle(tostring(&quot;coldresist&quot;))
TReX.defs.def_keepup_toggle(tostring(&quot;fireresist&quot;))</script>
                <command></command>
                <packageName></packageName>
                <regex>^rings$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>heldbreath (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;heldbreath&quot;))</script>
                <command></command>
                <packageName></packageName>
                <regex>^hb$</regex>
            </Alias>
            <Alias isActive="no" isFolder="no">
                <name>fitness (toggle)</name>
                <script>--TReX.toggle.fitness()</script>
                <command></command>
                <packageName></packageName>
                <regex>^fitness$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>selfishness (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;selfishness&quot;))</script>
                <command></command>
                <packageName></packageName>
                <regex>^sl$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>rebounding (toggle)</name>
                <script>TReX.defs.def_keepup_toggle(tostring(&quot;rebounding&quot;))
TReX.defs.keepup()</script>
                <command></command>
                <packageName></packageName>
                <regex>^rb$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>conc/trans (toggle)</name>
                <script>TReX.serverside.transmutation_toggle()
</script>
                <command></command>
                <packageName></packageName>
                <regex>^ttrans$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>moss (toggle)</name>
                <script>TReX.serverside.moss_toggle()
</script>
                <command></command>
                <packageName></packageName>
                <regex>^mss$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>diagnose (cmd)</name>
                <script>quicklook=true
TReX.serverside.diagnose()</script>
                <command></command>
                <packageName></packageName>
                <regex>^diag$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>torso heal (cmd)</name>
                <script>t.send(&quot;apply restoration to torso&quot;, false)</script>
                <command></command>
                <packageName></packageName>
                <regex>^tor$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>full sip</name>
                <script>t.serverside.fullsip = true
local num = 99.9
--set health prio to 100
t.serverside.temp_sip_health_full = t.serverside[&quot;settings_default&quot;].sip_health_at
t.serverside.temp_sip_mana_full = t.serverside[&quot;settings_default&quot;].sip_mana_at

	t.serverside[&quot;settings_default&quot;].sip_health_at = num
	t.send(&quot;curing siphealth &quot; .. num)
--set mana prio to 100
	t.serverside[&quot;settings_default&quot;].sip_mana_at = num
	t.send(&quot;curing sipmana &quot; .. num)


</script>
                <command></command>
                <packageName></packageName>
                <regex>^fl$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>map</name>
                <script>deletep=false
t.send(&quot;map&quot;)
enableTrigger&quot;TReX Prompt Trigger&quot;</script>
                <command></command>
                <packageName></packageName>
                <regex>^map$</regex>
            </Alias>
            <AliasGroup isActive="no" isFolder="yes">
                <name>metamorphosis</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>mini skills</name>
                    <script>for k,v in pairs(def_list.metamorphosis) do

			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance() then
				t.send(&quot;morph &quot;..k) 
			end	

	if table.contains({v}, matches[2]) then
			t.send(matches[2])
	end

end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^(forage|dig)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>ab skill check</name>
                    <script>send(&quot;ab metamorphosis&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^meta$</regex>
                </Alias>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>offense</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>gaze</name>
                        <script>for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance() then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..matches[2]..&quot; &quot;..target..&quot; &quot;..matches[3])
				break
			else	
				t.send(matches[2]..&quot; &quot;..target..&quot; &quot;..matches[3])
			end
	end

end


</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(gaze) (paralysis|confusion)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>petrify</name>
                        <script>for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance() then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..matches[2]..&quot; &quot;..target)
				break
			else
				t.send(matches[2]..&quot; &quot;..target)
			end
	end

end

</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(petrify)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>burrow</name>
                        <script>if matches[2] == &quot;b&quot; then
	matches[2] = &quot;burrow&quot; 
end

if matches[3] == &quot;a&quot; then
	matches[3]=&quot;above&quot;
elseif matches[3] == &quot;b&quot; then
	matches[3]=&quot;below&quot; 
end


for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance()  then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..matches[2]..&quot; &quot;..matches[3])
				break
			else	
				t.send(matches[2]..&quot; &quot;..matches[3])
			end
	end

end
</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(b|burrow)(a|b)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>sprint</name>
                        <script>for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance()  then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..&quot;remove shackle &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;&quot;..matches[2]..&quot; &quot;..matches[3]..&quot; &quot;..matches[4]..(TReX.config.cc or &quot;##&quot;)..&quot;wear shackle &quot;)
				break
			else
				t.send(&quot;remove shackle &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;&quot;..matches[2]..&quot; &quot;..matches[3]..&quot; &quot;..matches[4]..(TReX.config.cc or &quot;##&quot;)..&quot;wear shackle &quot;)
			end
	end

end


</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(sprint) (\w+) (\d+)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>fly</name>
                        <script>if TReX.s.class == &quot;Dragon&quot; then
	if matches[2] == &quot;fly&quot; then
		t.send(&quot;fly&quot;)
	end
		return
end


for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
		if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance()  then
			t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..&quot;queue prepend eqbal &quot;..matches[2]..&quot; &quot;..(TReX.config.cc or &quot;##&quot;)..TReX.defs.sip_mana_check())
			break
		else
			t.send(&quot;queue prepend eqbal &quot;..matches[2])
		end
	end

end





--..(TReX.config.cc or &quot;##&quot;)..&quot;queue prepend eqbal &quot;..matches[2]..&quot; &quot;..t.target</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(fly|leap|view)$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>defence</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>defences</name>
                        <script>for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance() then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..TReX.defs.sip_mana_check()) 
			end	

		if matches[2] == &quot;melody&quot; then
			t.send(&quot;sing &quot;..matches[2])
		else
			t.send(matches[2])
		end

			break

	end
end


for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then
			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance()  then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..matches[2]..&quot; &quot;..matches[3])
				break
			else	
				t.send(matches[2]..&quot; &quot;..matches[3])
			end
	end

end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^(vitality|resistance|stealth|fitness|melody)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>rest</name>
                        <script>for k,v in pairs(def_list.metamorphosis) do
	if table.contains({v}, matches[2]) then

			if TReX.defs.morph_check():lower() ~= k and TReX.serverside.am_functional() and TReX.serverside.full_balance()  then
				t.send(&quot;morph &quot;..k..(TReX.config.cc or &quot;##&quot;)..&quot;queue prepend eqbal relax insomnia &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;sleep&quot;, false)
				break 
			else
				t.send(&quot;queue prepend eqbal relax insomnia &quot;..(TReX.config.cc or &quot;##&quot;)..&quot;sleep&quot;, false)
			end			

	end
end

</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^rest$</regex>
                    </Alias>
                </AliasGroup>
            </AliasGroup>
            <AliasGroup isActive="no" isFolder="yes">
                <name>sentinel</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>spinspear</name>
                    <script>TReX.rewield(t.inv[&quot;spear&quot;].id, &quot;r&quot;)
t.send(&quot;queue add eqbal spin spear&quot;)
if not t.def.spinspear then
	t.def.spinspear = true
end
if not table.contains({t.defs}, &quot;spinspear&quot;) then
	table.insert(t.defs, &quot;spinspear&quot;)
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ss$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>cease spinning</name>
                    <script>t.send(&quot;stop spinning&quot;)

if t.def.spinspear then
	t.def.spinspear = false
end

if table.contains({t.defs}, &quot;spinspear&quot;) then
	table.remove(t.defs, table.index_of(t.defs, &quot;spinspear&quot;))
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^cs$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="no" isFolder="yes">
                <name>bard</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>levitate</name>
                    <script>TReX.defs.def_keepup_toggle(tostring(&quot;levitating&quot;))
TReX.defs.keepup()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^levitate$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>songbird</name>
                    <script>TReX.defs.def_keepup_toggle(tostring(&quot;songbird&quot;))
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^sb$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>aria</name>
                    <script>TReX.defs.def_keepup_toggle(tostring(&quot;aria&quot;))
TReX.defs.keepup()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ara$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>enemy list</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex>^hl</regex>
            <Alias isActive="yes" isFolder="no">
                <name>Show enemies list</name>
                <script>if hl.enemyList_ids == nil then
	echo(&quot;No enemies! Live happy!\n&quot;)
	return
end

for k,v in pairs(hl.enemyList_ids) do
	echo(k .. &quot;, &quot;)
end

echo(&quot;\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hlshow enemies$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Clear list</name>
                <script>hl.clearTriggers()
echo(&quot;\nCleared all enemies.&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hlclear$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Pausing</name>
                <script>if matches[2] == &quot;pp&quot; then
	if hl.paused then hl.paused = false
	else hl.paused = true end
elseif matches[2] == &quot;pause&quot; then
	hl.paused = true
else
	hl.paused = false
end

if hl.paused then
	echo(&quot;Paused the highlighter.\n&quot;)
else
	echo(&quot;Unpaused the highlighter.\n&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^hl(pp|pause|unpause)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Raid mode</name>
                <script>if matches[2] == nil then
	if hl.raid then hl.raid = false
	else hl.raid = true end
elseif matches[2] == &quot;on&quot; then
	hl.raid = true
else
	hl.raid = false
end

if hl.raid then
	t.serverside.green_echo(&quot;Enabled raid mode.&quot;)
	TReX.defs.raid()
else
	t.serverside.red_echo(&quot;Disabled raid mode.&quot;)
	TReX.defs.defs2relax()
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^raid\s?(on|off)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show info</name>
                <script>echo(&quot;Highlighter prefs. To be prettified later.\n&quot;)
echo(&quot;Paused: &quot; .. tostring(hl.paused) .. &quot;\n&quot;)
echo(&quot;Raid mode: &quot; .. tostring(hl.raid) .. &quot;\n&quot;)
echo(&quot;Enemies known: &quot; .. hl.countIndexes(hl.enemyList_ids))</script>
                <command></command>
                <packageName></packageName>
                <regex>^hlshow$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>City enemies</name>
                <script>enableTrigger(&quot;Get enemy list&quot;)
tempTimer(getNetworkLatency() * 3, [[disableTrigger(&quot;Get enemy list&quot;)]])
send(command, false)</script>
                <command></command>
                <packageName></packageName>
                <regex>^city enemies$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>retardation</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>retard reset manual</name>
                <script>t.affs.retardation=false
		if table.contains({t.serverside.gmcp_aff_table}, &quot;retardation&quot;) then	
			table.remove(t.serverside.gmcp_aff_table, table.index_of(t.serverside.gmcp_aff_table), &quot;retardation&quot;)
		end	
		
	cecho(&quot;&lt;cyan&gt; RETARD MODE OFF, SORRY WE BROKE ON YOU SIR!&quot;)
	</script>
                <command></command>
                <packageName></packageName>
                <regex>^ror$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>hunting</name>
            <script></script>
            <command></command>
            <packageName>Huntingv06</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Install Hunting</name>
                <script>local sep
local homeDir = getMudletHomeDir()
if string.char(homeDir:byte()) == &quot;/&quot; then 
	sep = &quot;/&quot; else sep = &quot;\\&quot;
end
table.save(homeDir.. sep .. huntVar.fileName..&quot;.lua&quot;, areaList)
table.save(homeDir.. sep .. huntVar.fileNameFull..&quot;.lua&quot;, areaList)
table.load(homeDir.. sep .. huntVar.fileName..&quot;.lua&quot;, huntVar.userAreaList)
table.load(homeDir.. sep .. huntVar.fileNameFull..&quot;.lua&quot;, fixedHuntVar.areaList)
huntVar.currentArea = gmcp.Room.Info.area
fixedHuntVar.areaDenizens = fixedHuntVar.areaList[huntVar.currentArea] or {}
huntVar.userAreaDenizens = huntVar.userAreaList[huntVar.currentArea] or {}
huntTracker:List()
t.serverside.green_echo(&quot;Hunting Table Installed\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hinstall$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hunting On/Off</name>
                <script>local toggle = &quot;on&quot;
if matches[2] == nil and huntVar.on then
	toggle = &quot;off&quot;
end
if matches[2] == &quot;off&quot; then
	toggle = &quot;off&quot;
end

huntToggle(toggle)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hunt\s?(on|off)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hunting Echo To</name>
                <script>if matches[2] == nil then
	huntVar.echoto = &quot;&quot;
	t.serverside.green_echo(&quot;Only echoing locally&quot;)
else
	huntVar.echoto = matches[2]
	t.serverside.red_echo(&quot;Echoing to: &quot;..matches[2])
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^hcc\s?(.+)?$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hunting Echo Toggle</name>
                <script>if huntVar.echo then
	huntVar.echo = false
	t.serverside.green_echo(&quot;Hunting Echo turned off.&quot;)
else
	huntVar.echo = true
	t.serverside.red_echo(&quot;Hunting Echo turned on.&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^hecho$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Reloading User Table</name>
                <script>local sep
local homeDir = getMudletHomeDir()
if string.char(homeDir:byte()) == &quot;/&quot; then 
	sep = &quot;/&quot; else sep = &quot;\\&quot;
end
table.load(homeDir.. sep .. huntVar.fileName..&quot;.lua&quot;, huntVar.userAreaList)
table.load(homeDir.. sep .. huntVar.fileNameFull..&quot;.lua&quot;, fixedHuntVar.areaList)

huntTableCheck()

huntVar.currentArea = gmcp.Room.Info.area
fixedHuntVar.areaDenizens = fixedHuntVar.areaList[huntVar.currentArea] or {}
huntVar.userAreaDenizens = huntVar.userAreaList[huntVar.currentArea] or {}
huntTracker:List()

t.serverside.green_echo(&quot;Hunting Table Reloaded\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hload$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Show Area Targets</name>
                <script>showHuntTargs()</script>
                <command></command>
                <packageName></packageName>
                <regex>^hshow$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Save Hunting Table</name>
                <script>huntTableCheck()

local sep
local homeDir = getMudletHomeDir()
if string.char(homeDir:byte()) == &quot;/&quot; then 
	sep = &quot;/&quot; else sep = &quot;\\&quot;
end
table.save(homeDir.. sep .. huntVar.fileName..&quot;.lua&quot;, huntVar.userAreaList)
table.save(homeDir.. sep .. huntVar.fileNameFull..&quot;.lua&quot;, fixedHuntVar.areaList)
t.serverside.green_echo(&quot;Hunting System Saved\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^hsave$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hunt Add</name>
                <script>addTargets()</script>
                <command></command>
                <packageName></packageName>
                <regex>^hadd$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hunt Remove</name>
                <script>removeTargets()</script>
                <command></command>
                <packageName></packageName>
                <regex>^hremove$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Geyser on/off</name>
                <script>ragewindow=ragewindow or false
--if matches[2] == nil and huntVar.on then
if not ragewindow then

ragestatus = Geyser.Label:new({
  name = &quot;ragestatus&quot;,
  x = &quot;46%&quot;,
  y = &quot;94%&quot;,
  width = &quot;6%&quot;,
  height = &quot;2.5%&quot;,
},main)
 
  ragebox = Geyser.VBox:new({
    name = &quot;ragebox&quot;,
    x = 0,
    y = 0,
    width = &quot;100%&quot;,
    height = &quot;100%&quot;,
  },ragestatus)

     ragestatus2 = Geyser.Label:new({
        name = &quot;ragestatus2&quot;,
      },ragebox)

	
	rage = tonumber(gmcp.Char.Vitals.charstats[2]:sub(7))
	ragestatus:show()
	ragestatus2:echo(&quot;Rage = &quot;..rage,&quot;green&quot;,&quot;cb15&quot;)
	ragewindow = true
else
	ragewindow = false
	ragestatus:hide()
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^hntg$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>rage off</name>
                <script>t.send(&quot;config ragemsg&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^rage off$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>rage on</name>
                <script>t.send(&quot;config ragemsg gain abcooldowns globalcooldowns&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^rage on$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>auto hunting on</name>
                <script>auto_hunt_on=true
t.serverside.green_echo(&quot;ao on&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^aon$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>auto hunting off</name>
                <script>auto_hunt_on=false
t.serverside.red_echo(&quot;ao off&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^aoff$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>gold-grabber</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Total Gold</name>
                <script>TReX.shinies.Total_Gold()</script>
                <command></command>
                <packageName></packageName>
                <regex>^gold$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Reset Retriever</name>
                <script>TReX.shinies.Gold_Reset()</script>
                <command></command>
                <packageName></packageName>
                <regex>^goldreset$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Gold Goal</name>
                <script>TReX.shinies.GoldGoal = matches[2] + 0
TReX.shinies.Total_Gold()</script>
                <command></command>
                <packageName></packageName>
                <regex>^goldgoal (.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Report A Bug</name>
                <script>send(&quot;msg Nehmrah [I am using TReX Gold Grabber]: &quot;..matches[2])
cecho(&quot;\n&lt;white&gt;[&lt;gold&gt;TReX&lt;white&gt;]:&lt;green&gt; Your Report Has Been Sent&lt;white&gt;!&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>^goldbug (.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Help File</name>
                <script>TReX.shinies.Retriever_Help()</script>
                <command></command>
                <packageName></packageName>
                <regex>^goldhelp$</regex>
            </Alias>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage/>
    <KeyPackage/>
    <HelpPackage>
        <helpURL></helpURL>
    </HelpPackage>
</MudletPackage>
